// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id       String  @id @default(cuid())
  clerkId  String  @unique
  imageUrl String  @db.Text
  banned   Boolean @default(false)
  credits  Int     @default(0)

  conclusions Conclusion[]
  likes       Likes[]

  @@index([clerkId])
}

model Thumbnail {
  id     String @id @default(cuid())
  url    String
  width  Int
  height Int

  conclusion   Conclusion @relation(fields: [conclusionId], references: [id], onDelete: Cascade)
  conclusionId String     @unique
}

model Segment {
  id      String @id @default(cuid())
  content String @db.Text
  time    String
  order   Int

  conclusion   Conclusion? @relation(fields: [conclusionId], references: [id], onDelete: Cascade)
  conclusionId String?

  @@index([conclusionId])
}

model Likes {
  conclusion   Conclusion @relation(fields: [conclusionId], references: [id], onDelete: Cascade)
  conclusionId String

  user   User   @relation(fields: [userId], references: [clerkId], onDelete: Cascade)
  userId String

  @@id([conclusionId, userId])
  @@index([conclusionId])
  @@index([userId])
}

model Conclusion {
  id             String   @id @default(cuid())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  videoId        String   @unique
  url            String
  title          String
  timesConcluded BigInt   @default(0)
  timesViewed    BigInt   @default(0)
  channelId      String   @default("")

  user      User?      @relation(fields: [userId], references: [id], onDelete: SetNull)
  userId    String?
  segments  Segment[]
  thumbnail Thumbnail?
  likes     Likes[]

  @@index([userId])
  @@index([videoId])
}
